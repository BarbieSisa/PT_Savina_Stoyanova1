// <auto-generated />
using System;
using DataLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataLayer.Migrations
{
    [DbContext(typeof(SavinaStoyanova_23DBContext))]
    [Migration("20230310062202_SavinaStoyanova_23DB")]
    partial class SavinaStoyanova_23DB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BussinessLayer.Airport", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TotalProfit")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.ToTable("Airports");
                });

            modelBuilder.Entity("BussinessLayer.Flight", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DestinationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FlightTime")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("BussinessLayer.FlightsReservations", b =>
                {
                    b.Property<int>("FligthID")
                        .HasColumnType("int");

                    b.Property<int>("ReservationID")
                        .HasColumnType("int");

                    b.HasKey("FligthID", "ReservationID");

                    b.HasIndex("ReservationID");

                    b.ToTable("FlightsReservations");
                });

            modelBuilder.Entity("BussinessLayer.Reservation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AirportID")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ReservedSeats")
                        .HasColumnType("int");

                    b.Property<int>("Tickets")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("AirportID");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("BussinessLayer.FlightsReservations", b =>
                {
                    b.HasOne("BussinessLayer.Flight", "Flight")
                        .WithMany("Reservations")
                        .HasForeignKey("FligthID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BussinessLayer.Reservation", "Reservation")
                        .WithMany("Flights")
                        .HasForeignKey("ReservationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flight");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("BussinessLayer.Reservation", b =>
                {
                    b.HasOne("BussinessLayer.Airport", "Airport")
                        .WithMany("Reservations")
                        .HasForeignKey("AirportID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Airport");
                });

            modelBuilder.Entity("BussinessLayer.Airport", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("BussinessLayer.Flight", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("BussinessLayer.Reservation", b =>
                {
                    b.Navigation("Flights");
                });
#pragma warning restore 612, 618
        }
    }
}
